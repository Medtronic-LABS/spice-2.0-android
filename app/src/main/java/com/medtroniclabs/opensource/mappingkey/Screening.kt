package com.medtroniclabs.opensource.mappingkey

import com.medtroniclabs.opensource.formgeneration.model.BPModel

object Screening {
    const val Height = "height"
    const val Weight = "weight"
    const val BMI = "bmi"
    const val firstName = "firstName"
    const val lastName = "lastName"
    const val nationalId = "nationalId"
    const val healthFacilityName = "siteName"
    const val phoneNumber = "phoneNumber"
    const val BPAverageMinimumValue = 50.0
    const val BPAverageMaximumValue = 300.0
    const val PulseMinimumValue = 50.0
    const val PulseMaximumValue = 300.0
    const val Systolic = "systolic"
    const val Diastolic = "diastolic"
    const val Pulse = "pulse"
    const val Hour = "hour"
    const val Minute = "minute"
    const val AM_PM = "am/pm"
    const val Today = "Today"
    const val Yesterday = "Yesterday"
    const val AM = "AM"
    const val PM = "PM"
    const val PHQ4 = "PHQ4"
    const val PHQ9 = "PHQ9"
    const val GAD7 = "GAD7"
    const val Fetch_MH_Questions = "Fetch_MH_Questions"
    const val Questions = "name"
    const val Answer = "displayValue"
    const val ModelAnswers = "modelAnswers"
    const val Display_Order = "displayOrder"
    const val select = "select"
    const val type = "type"
    const val Question_Id = "questionId"
    const val Answer_Id = "answerId"
    const val mentalHealthScore = "score"
    const val Value = "value"
    const val MentalHealthDetails = "mentalHealthDetails"
    const val Mandatory = "mandatory"
    const val isMandatory = "isMandatory"

    const val Latitude = "latitude"
    const val Longitude = "longitude"
    const val Screening_Date_Time = "screeningDateTime"
    const val AppVersion = "appVersion"
    const val Unit_Measurement_Metric_Type = "metric"
    const val Feet = "feet"
    const val Inches = "inches"
    const val BPLog_Details = "bpLogDetails"
    const val Avg_Systolic = "avgSystolic"
    const val Avg_Diastolic = "avgDiastolic"
    const val Device_Info_Id = "deviceInfoId"
    const val BPTakenOn = "bpTakenOn"
    const val BGTakenOn = "bgTakenOn"
    const val Avg_Blood_pressure = "avgBloodPressure"
    const val PHQ4_Score = "score"
    const val RiskLevel = "riskLevel"
    const val Normal: String = "Normal"
    const val Mild: String = "Mild"
    const val Moderate = "Moderate"
    const val Severe = "Severe"
    const val CAGEAID = "cageAid"
    const val suicideScreener = "suicideScreener"
    const val substanceAbuse = "substanceAbuse"
    const val SuicidalIdeation = "suicidalIdeation"
    const val SuicidalIdeationQuestion =
        "Have you thought of/contemplated ending your life or not worth living?"

    const val BloodGlucoseID = "glucose"
    const val unitMeasurement_KEY = "Unit"
    const val mmoll = "mmol/L"
    const val UpperLimitSystolic = 140
    const val UpperLimitDiastolic = 90
    const val mgdl = "mg/dL"
    const val FBSMaximumValue = 6.1
    const val FBSUpperMaximumValue = 15
    const val RBSMaximumValue = 7.8
    const val RBSUpperMaximumValue = 15
    const val FBSMaximumMGDlValue = 110
    const val FBSUpperMaximumMGDlValue = 270
    const val RBSUpperMaximumMGDlValue = 270
    const val RBSMaximumMGDlValue = 140
    const val PregnancyANCMaxValue = 40
    const val Glucose_Value = "glucoseValue"
    const val lastMealTime = "lastMealTime"
    const val Glucose_Type = "glucoseType"
    const val rbs = "rbs"
    const val fbs = "fbs"
    const val Glucose_Date_Time = "glucoseDateTime"
    const val NoSymptoms = "No symptoms"
    const val PregnancySymptoms = "pregnancySymptoms"
    const val PregnancyOtherSymptoms = "pregnancyOtherSymptoms"
    const val ReferAssessment = "isReferAssessment"
    const val PositiveValue: Boolean = true
    const val NegativeValue: Boolean = false
    const val referredReasons = "referredReasons"
    const val UnitMeasurement = "unitMeasurement"
    const val CustomizedWorkflows = "customizedWorkflows"
    const val PCMentalHealth = "pcMentalHealth"
    const val PIScore = "piScore"
    const val BMI_CATEGORY = "bmiCategory"
    const val HbA1c_Date_Time = "hba1cDateTime"
    const val GlucoseId = "glucoseId"
    const val GlucoseLogId = "glucoseLogId"
    const val PHQ4_Result = "phq4_result"
    const val PHQ9_Result = "phq9_result"
    const val PHQ9_Score = "phq9Score"
    const val PHQ9_Risk_Level = "phq9RiskLevel"
    const val PHQ9_Mental_Health = "phq9MentalHealth"
    const val GAD7_Risk_Level = "gad7RiskLevel"
    const val GAD7_Score = "gad7Score"
    const val GAD7_Mental_Health = "gad7MentalHealth"
    const val Avg_Pulse = "avg_pulse"
    const val bp_log_id = "bpLogId"
    const val Initial = "initial"
    const val Signature = "signature"
    const val First_Name = "firstName"
    const val isDiabetesDiagnosis = "isDiabetesDiagnosis"
    const val DiabetesPatientType = "diabetesPatientType"
    const val BioMetrics = "bioMetrics"
    const val Patient_Id = "patientId"
    const val DoorToDoor = "Door to Door"
    const val outpatient = "Outpatient"
    const val inpatient = "Inpatient"
    const val Others = "Others"
    const val OPDTriage = "OPD"
    const val Camp = "camp"
    const val Pharmacy = "pharmacy"
    const val Type = "type"
    const val bioData = "bioData"
    const val bioMetrics = "bioMetrics"
    const val identityType = "identityType"
    const val GlucoseUnit = "glucoseUnit"
    const val DateOfBirth = "dateOfBirth"
    const val lastMealTypeMeridiem  = "Meridiem"
    const val lastMealTypeDateSuffix  = "Date"
    const val MHAnswer = "answer"
    const val MHQuestion = "question"
    const val diabetes = "diabetes"
    const val diabetesOtherSymptoms = "diabetesOtherSymptoms"
    const val national_id = "national-id"
    const val passport = "passport"
    const val birthCertificate = "birth-certificate"
    const val CategoryType = "categoryType"
    const val CategoryDisplayName = "categoryDisplayName"
    const val CategoryDisplayType = "categoryDisplayType"
    const val bp_log = "bpLog"
    const val GlucoseLog = "glucoseLog"
    const val YESTERDAY = "YESTERDAY"
    const val TODAY ="TODAY"
    const val Facility = "Facility"
    const val Community = "Community"
    const val identityValue = "identityValue"
    const val CVD_Risk_Score = "cvdRiskScore"
    const val CVD_Risk_Level = "cvdRiskLevel"
    const val CVD_Risk_Score_Display = "cvdRiskScoreDisplay"
    const val Age = "age"

    const val Female = "Female"
    const val Male = "Male"
    const val is_regular_smoker = "isRegularSmoker"
    // CVD Risks
    const val very_low_risk_limit = 5
    const val low_risk_limit = 10
    const val medium_risk_limit = 20
    const val medium_high_risk_limit = 30
    const val SiteName = "siteName"
    const val UserId = "userId"
    const val otherType = "otherType"
    const val siteId = "siteId"
    const val userSiteId = "userSiteId"
    const val pregnancyAnc = "pregnancyAnc"
    const val lastMenstrualPeriod = "lastMenstrualPeriod"
    const val GestationalAge = "gestationalAge"
    const val isPregnant = "isPregnant"
    const val CountryId = "countryId"
    const val isPregnancyAnc = "isPregnancyAnc"
    const val RegistrationSignSuffix = "_registration_signature"
    const val ScreeningSignSuffix = "_screening_signature"
    const val Entity = "entity"
    const val PatientDetails = "patientDetails"
    const val SSP16 = 16
    fun getEmptyBPReading(size: Int): ArrayList<BPModel> {
        val list = ArrayList<BPModel>()
        for (i in 1..size) {
            list.add(BPModel())
        }
        return list
    }
    const val DISTRICT_ID = "districtId"
    const val CHIEFDOM_ID = "chiefdomId"
    const val VILLAGE = "village"

    const val NotAtAll = "Not at all"
    const val SeveralDays = "Several days"
    const val MoreThanHalfTheDays = "More than half the days"
    const val NearlyEveryDay = "Nearly every day"
}